eu.thedarken.diagnosis.DGdata -> eu.thedarken.diagnosis.d:
    java.util.regex.Pattern NET_PATTERN -> b
    java.util.regex.Pattern CPU_PATTERN -> c
    java.util.regex.Pattern CPU_RUNNING_PATTERN -> d
    java.util.regex.Pattern MEMORY_PATTERN -> e
    java.util.regex.Pattern APP_PATTERN -> f
    java.util.regex.Pattern LOAD_PATTERN -> g
    android.content.Context mContext -> h
    long current_time -> i
    java.util.LinkedList cpulist -> j
    java.util.LinkedList memlist -> k
    java.util.LinkedList loadlist -> l
    java.util.LinkedList battlist -> m
    java.util.LinkedList netlist -> n
    java.util.LinkedList touchlist -> o
    java.util.LinkedList active_apps -> p
    java.util.LinkedList apps -> q
    java.lang.String BUSYBOX -> r
    int active_count -> s
    eu.thedarken.diagnosis.DGdatabase db -> t
    int db_cache -> u
    int DB_CACHE_INTERVALL -> v
    boolean database_enabled -> a
    int highest_app -> w
    android.content.SharedPreferences settings -> x
    android.content.BroadcastReceiver batteryReceiver -> y
    213:214:void close() -> a
    233:236:eu.thedarken.diagnosis.DGdata$CpuInfo getCpu() -> b
    240:243:eu.thedarken.diagnosis.DGdata$MemInfo getMem() -> c
    247:250:eu.thedarken.diagnosis.DGdata$LoadInfo getLoad() -> d
    254:257:eu.thedarken.diagnosis.DGdata$BattInfo getBatt() -> e
    261:264:eu.thedarken.diagnosis.DGdata$NetInfo getNet() -> f
    280:280:eu.thedarken.diagnosis.DGdata$AppInfo getHighestApp() -> g
    288:300:void update() -> h
    303:360:void pushToDB() -> i
    371:407:void doNet() -> j
    461:479:int getCpuFrequency() -> k
    484:545:void doTop() -> l
    185:185:long access$0(eu.thedarken.diagnosis.DGdata) -> a
    189:189:java.util.LinkedList access$1(eu.thedarken.diagnosis.DGdata) -> b
    184:184:android.content.Context access$2(eu.thedarken.diagnosis.DGdata) -> c
eu.thedarken.diagnosis.DGdata$1 -> eu.thedarken.diagnosis.b:
    eu.thedarken.diagnosis.DGdata$BattInfo temp -> a
    eu.thedarken.diagnosis.DGdata this$0 -> b
    220:228:void onReceive(android.content.Context,android.content.Intent) -> onReceive
eu.thedarken.diagnosis.DGdata$AppInfo -> eu.thedarken.diagnosis.m:
    java.lang.String vsz -> a
    float mem -> b
    float cpu -> c
    java.lang.String command -> d
    long system_time -> e
    eu.thedarken.diagnosis.DGdata this$0 -> f
eu.thedarken.diagnosis.DGdata$BattInfo -> eu.thedarken.diagnosis.f:
    int scale -> a
    int level -> b
    int voltage -> c
    int temp -> d
    long system_time -> e
    eu.thedarken.diagnosis.DGdata this$0 -> f
eu.thedarken.diagnosis.DGdata$CpuInfo -> eu.thedarken.diagnosis.o:
    float usage -> a
    long user -> b
    long nice -> c
    long system -> d
    long idle -> e
    int active_apps -> f
    int cpu_frequency -> g
    long system_time -> h
    eu.thedarken.diagnosis.DGdata this$0 -> i
eu.thedarken.diagnosis.DGdata$LoadInfo -> eu.thedarken.diagnosis.c:
    float first -> a
    float second -> b
    float third -> c
    int active_apps -> e
    long system_time -> d
    eu.thedarken.diagnosis.DGdata this$0 -> f
eu.thedarken.diagnosis.DGdata$MemInfo -> eu.thedarken.diagnosis.g:
    int used -> a
    int free -> b
    int shared -> c
    int buffer -> d
    int cached -> e
    long system_time -> f
    eu.thedarken.diagnosis.DGdata this$0 -> g
eu.thedarken.diagnosis.DGdata$NetInfo -> eu.thedarken.diagnosis.e:
    long traffic_up -> a
    long traffic_down -> b
    long rate_up -> c
    long rate_down -> d
    long system_time -> e
    eu.thedarken.diagnosis.DGdata this$0 -> f
eu.thedarken.diagnosis.DGdata$TouchInfo -> eu.thedarken.diagnosis.n:
    long touches -> a
    long system_time -> b
    eu.thedarken.diagnosis.DGdata this$0 -> c
eu.thedarken.diagnosis.DGdatabase -> eu.thedarken.diagnosis.a:
    android.database.sqlite.SQLiteDatabase mDB -> a
    android.content.Context mContext -> c
    java.util.ArrayList create_tables -> d
    java.util.ArrayList tables -> b
    boolean isOpen -> e
    105:106:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    109:114:void createTables(android.database.sqlite.SQLiteDatabase) -> a
    119:119:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    122:133:boolean openWrite() -> a
    151:156:void close() -> close
eu.thedarken.diagnosis.DGmain -> eu.thedarken.diagnosis.DGmain:
    android.widget.Button start -> a
    android.content.Intent service -> b
    android.content.SharedPreferences settings -> c
    android.content.SharedPreferences$Editor prefEditor -> d
    android.content.Context mContext -> e
    java.lang.String BUSYBOX -> f
    32:47:void onCreate(android.os.Bundle) -> onCreate
    50:55:void isRunning() -> a
    58:69:void toggle_service(android.view.View) -> toggle_service
    73:75:void onResume() -> onResume
    78:101:java.lang.Boolean CopyAssets() -> b
    120:122:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    127:133:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
eu.thedarken.diagnosis.DGoverlay -> eu.thedarken.diagnosis.DGoverlay:
    android.content.SharedPreferences settings -> h
    android.content.SharedPreferences$Editor prefEditor -> i
    android.content.Context mContext -> j
    eu.thedarken.diagnosis.DGoverlay$Overlay mOverlay -> k
    android.view.WindowManager wm -> l
    long touchcounter -> m
    int INTERVALL -> a
    boolean isPaused -> n
    android.os.Handler mHandler -> o
    java.util.ArrayList lines -> p
    boolean clearScreen -> q
    boolean reset -> b
    boolean haltoverlay -> c
    eu.thedarken.diagnosis.DGdata data -> r
    boolean screenON -> d
    android.content.BroadcastReceiver screenOnReciever -> s
    boolean noOverlay -> t
    int font_type -> e
    boolean isRunning -> f
    boolean alignright -> g
    float ALERT_BARRIER -> u
    int overlay_width -> v
    int overlay_height -> w
    java.lang.Runnable update -> x
    75:115:void onCreate() -> onCreate
    119:127:void onDestroy() -> onDestroy
    170:170:android.os.IBinder onBind(android.content.Intent) -> onBind
    175:177:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    181:181:long getTouchCount() -> a
    31:31:android.content.Context access$0(eu.thedarken.diagnosis.DGoverlay) -> a
    42:42:eu.thedarken.diagnosis.DGdata access$1(eu.thedarken.diagnosis.DGoverlay) -> b
    38:38:java.util.ArrayList access$2(eu.thedarken.diagnosis.DGoverlay) -> c
    241:241:void access$3(eu.thedarken.diagnosis.DGoverlay,int) -> a
    32:32:eu.thedarken.diagnosis.DGoverlay$Overlay access$4(eu.thedarken.diagnosis.DGoverlay) -> d
    37:37:android.os.Handler access$5(eu.thedarken.diagnosis.DGoverlay) -> e
    198:198:java.lang.Runnable access$6(eu.thedarken.diagnosis.DGoverlay) -> f
    29:29:android.content.SharedPreferences access$7(eu.thedarken.diagnosis.DGoverlay) -> g
    39:39:boolean access$8(eu.thedarken.diagnosis.DGoverlay) -> h
    39:39:void access$9$5931e121(eu.thedarken.diagnosis.DGoverlay) -> i
    34:34:long access$10() -> b
    34:34:void access$11(long) -> a
eu.thedarken.diagnosis.DGoverlay$1 -> eu.thedarken.diagnosis.i:
    eu.thedarken.diagnosis.DGoverlay this$0 -> a
    200:238:void run() -> run
eu.thedarken.diagnosis.DGoverlay$Line -> eu.thedarken.diagnosis.j:
    java.lang.String text -> a
    int x_pos -> b
    int y_pos -> c
    android.graphics.Paint textstyle -> d
    int layout -> e
    eu.thedarken.diagnosis.DGoverlay this$0 -> f
eu.thedarken.diagnosis.DGoverlay$Overlay -> eu.thedarken.diagnosis.h:
    eu.thedarken.diagnosis.DGoverlay this$0 -> a
    136:151:void onDraw(android.graphics.Canvas) -> onDraw
    156:156:void onLayout(boolean,int,int,int,int) -> onLayout
    161:163:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
eu.thedarken.diagnosis.DGoverlay$ScreenReceiver -> eu.thedarken.diagnosis.DGoverlay$ScreenReceiver:
    eu.thedarken.diagnosis.DGoverlay this$0 -> a
    187:192:void onReceive(android.content.Context,android.content.Intent) -> onReceive
eu.thedarken.diagnosis.DGsettings -> eu.thedarken.diagnosis.DGsettings:
    android.content.Context mContext -> a
    18:57:void onCreate(android.os.Bundle) -> onCreate
    61:64:void onResume() -> onResume
    68:70:void onPause() -> onPause
    75:85:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    89:97:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
eu.thedarken.diagnosis.DGsettings$1 -> eu.thedarken.diagnosis.l:
    eu.thedarken.diagnosis.DGsettings this$0 -> a
    27:28:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
eu.thedarken.diagnosis.DGsettings$2 -> eu.thedarken.diagnosis.k:
    eu.thedarken.diagnosis.DGsettings this$0 -> a
    38:39:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
eu.thedarken.extra.AlphaPatternDrawable -> eu.thedarken.extra.b:
    int mRectangleSize -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mPaintWhite -> c
    android.graphics.Paint mPaintGray -> d
    int numRectanglesHorizontal -> e
    int numRectanglesVertical -> f
    android.graphics.Bitmap mBitmap -> g
    57:58:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    67:67:void setAlpha(int) -> setAlpha
    72:72:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    77:87:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
eu.thedarken.extra.ColorPickerDialog -> eu.thedarken.extra.d:
    eu.thedarken.extra.ColorPickerView mColorPicker -> a
    eu.thedarken.extra.ColorPickerPanelView mOldColor -> b
    eu.thedarken.extra.ColorPickerPanelView mNewColor -> c
    eu.thedarken.extra.ColorPickerDialog$OnColorChangedListener mListener -> d
    91:99:void onColorChanged(int) -> a
    102:103:void setAlphaSliderVisible$1385ff() -> a
    111:112:void setOnColorChangedListener(eu.thedarken.extra.ColorPickerDialog$OnColorChangedListener) -> a
    120:130:void onClick(android.view.View) -> onClick
eu.thedarken.extra.ColorPickerDialog$OnColorChangedListener -> eu.thedarken.extra.a:
    void onColorChanged(int) -> a
eu.thedarken.extra.ColorPickerPanelView -> eu.thedarken.extra.ColorPickerPanelView:
    float mDensity -> a
    int mBorderColor -> b
    int mColor -> c
    android.graphics.Paint mBorderPaint -> d
    android.graphics.Paint mColorPaint -> e
    android.graphics.RectF mDrawingRect -> f
    android.graphics.RectF mColorRect -> g
    eu.thedarken.extra.AlphaPatternDrawable mAlphaPattern -> h
    78:92:void onDraw(android.graphics.Canvas) -> onDraw
    97:101:void onMeasure(int,int) -> onMeasure
    105:115:void onSizeChanged(int,int,int,int) -> onSizeChanged
    143:145:void setColor(int) -> a
    152:152:int getColor() -> a
eu.thedarken.extra.ColorPickerPreference -> eu.thedarken.extra.ColorPickerPreference:
    android.view.View mView -> a
    int mDefaultValue -> b
    int mValue -> c
    float mDensity -> d
    boolean mAlphaSliderEnabled -> e
    65:85:void init(android.content.Context,android.util.AttributeSet) -> a
    89:92:void onBindView(android.view.View) -> onBindView
    95:113:void setPreviewColor() -> b
    116:132:android.graphics.Bitmap getPreviewBitmap() -> c
    137:144:int getValue() -> d
    149:159:void onColorChanged(int) -> a
    162:169:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    177:178:void setAlphaSliderEnabled$1385ff() -> a
    186:207:java.lang.String convertToARGB(int) -> b
    218:237:int convertToColorInt(java.lang.String) -> a
eu.thedarken.extra.ColorPickerView -> eu.thedarken.extra.ColorPickerView:
    float HUE_PANEL_WIDTH -> a
    float ALPHA_PANEL_HEIGHT -> b
    float PANEL_SPACING -> c
    float PALETTE_CIRCLE_TRACKER_RADIUS -> d
    float RECTANGLE_TRACKER_OFFSET -> e
    float mDensity -> f
    eu.thedarken.extra.ColorPickerView$OnColorChangedListener mListener -> g
    android.graphics.Paint mSatValPaint -> h
    android.graphics.Paint mSatValTrackerPaint -> i
    android.graphics.Paint mHuePaint -> j
    android.graphics.Paint mHueTrackerPaint -> k
    android.graphics.Paint mAlphaPaint -> l
    android.graphics.Paint mAlphaTextPaint -> m
    android.graphics.Paint mBorderPaint -> n
    android.graphics.Shader mValShader -> o
    android.graphics.Shader mSatShader -> p
    android.graphics.Shader mHueShader -> q
    android.graphics.Shader mAlphaShader -> r
    int mAlpha -> s
    float mHue -> t
    float mSat -> u
    float mVal -> v
    java.lang.String mAlphaSliderText -> w
    int mSliderTrackerColor -> x
    int mBorderColor -> y
    boolean mShowAlphaPanel -> z
    int mLastTouchedPanel -> A
    float mDrawingOffset -> B
    android.graphics.RectF mDrawingRect -> C
    android.graphics.RectF mSatValRect -> D
    android.graphics.RectF mHueRect -> E
    android.graphics.RectF mAlphaRect -> F
    eu.thedarken.extra.AlphaPatternDrawable mAlphaPattern -> G
    android.graphics.Point mStartTouchPoint -> H
    209:216:int[] buildHueColorArray() -> c
    223:229:void onDraw(android.graphics.Canvas) -> onDraw
    466:561:boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    567:606:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    611:647:boolean moveTrackersIfNeeded(android.view.MotionEvent) -> a
    653:693:void onMeasure(int,int) -> onMeasure
    726:732:int getPrefferedHeight() -> d
    739:750:void onSizeChanged(int,int,int,int) -> onSizeChanged
    810:811:void setOnColorChangedListener(eu.thedarken.extra.ColorPickerView$OnColorChangedListener) -> a
    853:872:void setColor$2563266(int) -> a
    883:883:float getDrawingOffset() -> a
    893:909:void setAlphaSliderVisible$1385ff() -> b
eu.thedarken.extra.ColorPickerView$OnColorChangedListener -> eu.thedarken.extra.c:
    void onColorChanged(int) -> a
eu.thedarken.extra.SeekBarPreference -> eu.thedarken.extra.SeekBarPreference:
    android.widget.SeekBar mSeekBar -> a
    android.widget.TextView mSplashText -> b
    android.widget.TextView mValueText -> c
    android.content.Context mContext -> d
    java.lang.String mDialogMessage -> e
    java.lang.String mSuffix -> f
    int mDefault -> g
    int mMax -> h
    int mValue -> i
    35:62:android.view.View onCreateDialogView() -> onCreateDialogView
    67:69:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    74:77:void onBindDialogView(android.view.View) -> onBindDialogView
    81:87:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    91:96:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    100:103:java.lang.CharSequence getSummary() -> getSummary
    108:108:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    111:111:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> a
    org.achartengine.chart.AbstractChart mChart -> b
    35:46:void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.c:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    154:178:void onDraw(android.graphics.Canvas) -> onDraw
    196:200:void zoomIn() -> a
    206:210:void zoomOut() -> b
    216:221:void zoomReset() -> c
    272:272:android.graphics.RectF getZoomRectangle() -> d
    277:288:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    295:300:void repaint() -> e
org.achartengine.GraphicalView$1 -> org.achartengine.d:
    org.achartengine.GraphicalView this$0 -> a
    297:298:void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.e:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> org.achartengine.b:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    81:138:boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandlerOld -> org.achartengine.a:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    66:96:boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> org.achartengine.d.a:
org.achartengine.chart.RoundChart -> org.achartengine.d.b:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    104:104:org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    113:113:int getCenterX() -> b
    122:122:int getCenterY() -> c
    131:132:void setCenterX(int) -> a
    140:141:void setCenterY(int) -> b
org.achartengine.chart.XYChart -> org.achartengine.d.c:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    android.graphics.Rect mScreenR -> c
    java.util.Map mCalcRange -> d
    java.util.Map clickableAreas -> e
    656:656:org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> a
    660:660:org.achartengine.model.XYMultipleSeriesDataset getDataset() -> b
    664:664:double[] getCalcRange(int) -> a
    695:699:double[] toRealPoint(float,float,int) -> a
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.c.a:
    java.util.List mSeries -> a
    91:91:org.achartengine.model.XYSeries[] getSeries() -> a
org.achartengine.model.XYSeries -> org.achartengine.c.b:
    double mMinX -> a
    double mMaxX -> b
    double mMinY -> c
    double mMaxY -> d
    int mScaleNumber -> e
    68:68:int getScaleNumber() -> a
    187:187:double getMinX() -> b
    196:196:double getMinY() -> c
    205:205:double getMaxX() -> d
    214:214:double getMaxY() -> e
org.achartengine.renderer.DefaultRenderer -> org.achartengine.a.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    boolean mShowAxes -> f
    int mAxesColor -> g
    boolean mShowLabels -> h
    int mLabelsColor -> i
    float mLabelsTextSize -> j
    boolean mShowLegend -> k
    float mLegendTextSize -> l
    boolean mFitLegend -> m
    boolean mShowGrid -> n
    boolean mShowCustomTextGrid -> o
    java.util.List mRenderers -> p
    boolean mAntialiasing -> q
    int mLegendHeight -> r
    int[] mMargins -> s
    float mScale -> t
    boolean mPanEnabled -> u
    boolean mZoomEnabled -> v
    boolean mZoomButtonsVisible -> w
    float mZoomRate -> x
    boolean mExternalZoomEnabled -> y
    float mOriginalScale -> z
    boolean mClickEnabled -> A
    int selectableBuffer -> B
    boolean mInScroll -> C
    463:463:float getScale() -> l
    472:472:float getOriginalScale() -> m
    482:483:void setScale(float) -> a
    491:491:boolean isZoomEnabled() -> d
    509:509:boolean isZoomButtonsVisible() -> n
    527:527:boolean isExternalZoomEnabled() -> o
    545:545:float getZoomRate() -> p
    554:554:boolean isPanEnabled() -> a
    581:581:boolean isClickEnabled() -> q
    655:655:boolean isInScroll() -> r
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.a.a:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    java.util.Map initialRange -> u
    float mPointSize -> v
    int mGridColor -> w
    int scalesCount -> x
    android.graphics.Paint$Align xLabelsAlign -> y
    android.graphics.Paint$Align[] yLabelsAlign -> z
    android.graphics.Paint$Align[] yAxisAlign -> A
    122:132:void initAxesRange$13462e() -> s
    354:354:double getXAxisMin(int) -> a
    364:368:void setXAxisMin(double,int) -> a
    377:377:boolean isMinXSet(int) -> b
    387:387:double getXAxisMax(int) -> c
    397:401:void setXAxisMax(double,int) -> b
    410:410:boolean isMaxXSet(int) -> d
    420:420:double getYAxisMin(int) -> e
    430:434:void setYAxisMin(double,int) -> c
    443:443:boolean isMinYSet(int) -> f
    453:453:double getYAxisMax(int) -> g
    463:467:void setYAxisMax(double,int) -> d
    476:476:boolean isMaxYSet(int) -> h
    671:671:boolean isPanEnabled() -> a
    680:680:boolean isPanXEnabled() -> b
    689:689:boolean isPanYEnabled() -> c
    709:709:boolean isZoomEnabled() -> d
    718:718:boolean isZoomXEnabled() -> e
    727:727:boolean isZoomYEnabled() -> f
    777:777:int getMarginsColor() -> g
    786:787:void setMarginsColor(int) -> i
    813:813:double[] getPanLimits() -> h
    833:833:double[] getZoomLimits() -> i
    913:917:void setRange(double[],int) -> a
    920:920:boolean isInitialRangeSet() -> j
    930:930:boolean isInitialRangeSet(int) -> j
    949:949:double[] getInitialRange(int) -> k
    1023:1023:int getScalesCount() -> k
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.a.c:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    93:93:org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    93:93:org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
org.achartengine.tools.AbstractTool -> org.achartengine.b.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    50:54:double[] getRange(int) -> a
    64:85:void checkRange(double[],int) -> a
    95:97:void setXRange(double,double,int) -> a
    107:109:void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> org.achartengine.b.e:
    39:77:void apply() -> a
org.achartengine.tools.Pan -> org.achartengine.b.a:
    java.util.List mPanListeners -> c
    50:97:void apply(float,float,float,float) -> a
    103:106:void notifyPanListeners() -> a
org.achartengine.tools.Zoom -> org.achartengine.b.c:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    56:57:void setZoomRate(float) -> a
    63:115:void apply() -> a
    122:125:void notifyZoomListeners$8a7ab56() -> c
    131:134:void notifyZoomResetListeners() -> b
org.achartengine.tools.ZoomEvent -> org.achartengine.b.d:
    boolean mZoomIn -> a
    float mZoomRate -> b
